@model Accounting.Models.Account.CreateAccountViewModel

@{
  ViewData["Title"] = "Create Account - " + ConfigurationSingleton.Instance.ApplicationName;
}

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

@{
  string headerText = "Create Account";
}
<partial name="_H1HeaderPartial" model="@headerText" />

<template id="account-type-selector-template">
  <select v-model="selectedAccountType" name="SelectedAccountType" class="font-size-20px width-100">
    <option value="">Select Account Type</option>
    <option v-for="accountType in accountTypes" :value="accountType">{{ accountType }}</option>
  </select>
</template>

<form id="app" asp-action="Create" asp-controller="Account" asp-route-parentAccountId="@Model.ParentAccountId"
      method="post" class="display-flex flex-direction-column margin-bottom-5px">
  <input type="hidden" asp-for="ParentAccountId" />

  @if (Model.ParentAccount != null)
  {
    <div class="display-flex margin-bottom-5px background-color-antiquewhite">
      <div>Parent Account:</div>
      <div class="display-flex flex-direction-column">
        <div class="flex-1"></div>
        <a asp-action="Update"
           asp-controller="Account"
           asp-route-accountId="@Model.ParentAccountId"
           class="font-Roboto-Mono margin-left-5px">@Model.ParentAccount.Name</a>
        <div class="flex-1"></div>
      </div>
    </div>
  }

  <div class="display-flex margin-bottom-5px">
    <div class="display-flex flex-1 flex-direction-column">
      @if (Model.ParentAccountId != null)
      {
        <label asp-for="AccountName" class="background-color-antiquewhite">Sub Account Name</label>
      }
      else
      {
        <label asp-for="AccountName" class="background-color-antiquewhite">Account Name</label>
      }
      <input asp-for="AccountName" class="font-size-20px width-100" />
    </div>
  </div>

  <div class="margin-bottom-5px background-color-antiquewhite">
    <label>Acount Type</label>
    <account-type-selector :account-types="accountTypes"></account-type-selector>
  </div>

  <div class="margin-bottom-5px background-color-antiquewhite">
    <label class="">Show in drop-down options for...</label>
    <div class="display-flex flex-direction-column">
      <div class="display-flex flex-direction-column">
        <div class="display-flex flex-1">
          <input asp-for="ShowInInvoiceCreationDropDownForCredit" type="checkbox" />
          <label asp-for="ShowInInvoiceCreationDropDownForCredit">Invoice creation for credit</label>
        </div>
        <div class="width-5px"></div>
        <div class="display-flex flex-1">
          <input asp-for="ShowInInvoiceCreationDropDownForDebit" type="checkbox" />
          <label asp-for="ShowInInvoiceCreationDropDownForDebit">Invoice creation for debit</label>
        </div>
      </div>
      <div class="display-flex flex-direction-column">
        <div class="display-flex flex-1">
          <input asp-for="ShowInReceiptOfPaymentDropDownForCredit" type="checkbox" />
          <label asp-for="ShowInReceiptOfPaymentDropDownForCredit">Payment receipt for credit</label>
        </div>
        <div class="width-5px"></div>
        <div class="display-flex flex-1">
          <input asp-for="ShowInReceiptOfPaymentDropDownForDebit" type="checkbox" />
          <label asp-for="ShowInReceiptOfPaymentDropDownForDebit">Payment receipt for debit</label>
        </div>
      </div>
      <div class="display-flex flex-direction-column">
        <div class="display-flex flex-1">
          <input asp-for="ReconciliationExpense" type="checkbox" />
          <label asp-for="ReconciliationExpense">Reconciliation Expense</label>
        </div>
      </div>
    </div>
  </div>

  <div class="display-flex flex-direction-column">
    <button type="submit" class="full-width-regular-button width-100">Create Account</button>
  </div>
</form>

@if (Model != null && Model.ValidationResult != null)
{
  foreach (var error in Model.ValidationResult.Errors)
  {
    <div>
      <small class="color-red">@error.ErrorMessage</small>
    </div>
  }
  <div class="margin-bottom-5px">
  </div>
}

<script>
  const { createApp } = Vue;

  const AccountTypeSelector = {
    name: 'AccountTypeSelector',
    template: '#account-type-selector-template',
    props: ['accountTypes'],
    data() {
      return {
        selectedAccountType: '@Model!.SelectedAccountType' || '',
      };
    },
  };

  const app = createApp({
    components: {
      'account-type-selector': AccountTypeSelector
    },
    data() {
      return {
        accountTypes: @Html.Raw(Json.Serialize(Model.AvailableAccountTypes)),
      };
    },
  });

  app.mount('#app');
</script>