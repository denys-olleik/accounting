@model Accounting.Models.UserViewModels.UsersPaginatedViewModel

@{
	ViewData["Title"] = "Users - " + ConfigurationSingleton.Instance.ApplicationName;
}

@{
	string headerText = "Users";
}
<partial name="_H1HeaderPartial" model="@headerText" />

<div class="display-flex margin-bottom-5px background-color-antiquewhite">
	<div>
		<a asp-action="Create" asp-controller="User" class="font-Roboto font-size-16px color-blue margin-left-20px">
			Create user
		</a>
	</div>
	<div class="margin-left-20px flex-1 text-align-right">
		<a asp-action="Index" asp-controller="Home" class="font-Roboto font-size-16px color-blue margin-left-20px">
			Home
		</a>
	</div>
</div>

<div id="app">

	<div v-if="(page > 1 || nextPage) && !isFiltered"
			 class="margin-bottom-5px display-flex font-Roboto font-size-16px background-color-antiquewhite">
		<div>
			<a :href="`/i/invoices?page=${page - 1}&pageSize=${pageSize}`" v-if="page > 1" class="color-blue">prev</a>
		</div>
		<div class="flex-1"></div>
		<div>
			<a :href="`/i/invoices?page=${nextPage}&pageSize=${pageSize}`" v-if="nextPage" class="color-blue">next</a>
		</div>
	</div>

</div>

<script>
	const { createApp } = Vue;

	const app = createApp({
		components: {

		},
		data() {
			return {
				page: @Model.Page,
				pageSize: @Model.PageSize,
				nextPage: null,
				rememberPageSize: @(Model.RememberPageSize ? "true" : "false")
			};
		},
		computed: {
			isFiltered() {
				return !!this.invoicesFilter || !!this.companyFilter;
			}
		}
	});

	app.mount('#app');
</script>