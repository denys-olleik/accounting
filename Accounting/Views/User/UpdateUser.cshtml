@model Accounting.Models.UserViewModels.UpdateUserViewModel

@{
  ViewData["Title"] = "Update user - " + ConfigurationSingleton.Instance.ApplicationName;
}

@{
  string headerText = "Update user";
}

<partial name="_H1HeaderPartial" model="@headerText" />

<div class="display-flex margin-bottom-5px background-color-antiquewhite">
  <div class="flex-1">
  </div>
  <div>
    <a asp-action="Index" asp-controller="Home" class="font-Roboto font-size-16px color-blue margin-left-20px">Home</a>
  </div>
</div>

<form id="app"
      asp-action="UpdateUser"
      asp-controller="User"
      asp-route-userId="@Model.UserID"
      method="post"
      class="display-flex flex-direction-column margin-bottom-5px">

  <input type="hidden" asp-for="SelectedOrganizationIdsCsv" :value="selectedOrganizationIds.join(',')" />
  <input type="hidden" name="Email" value="@Model.Email" id="HiddenEmail" />

  <div v-for="role in selectedRoles" :key="'hidden-role-' + role">
    <input type="hidden" name="SelectedRoles" :value="role" />
  </div>

  <div class="display-flex flex-direction-column margin-bottom-5px">
    <label asp-for="Email" class="background-color-antiquewhite">Email</label>
    <input asp-for="Email" class="font-size-20px" disabled autocomplete="off" readonly="@(Model.UserID != Model.CurrentRequestingUserId)" />
    <div class="display-flex background-color-antiquewhite">
      <div class="flex-1"></div>
      <a asp-action="UpdateEmail" asp-controller="User" asp-route-id="@Model.UserID">update email</a>
    </div>
  </div>

  <div class="display-flex">
    <div class="flex-1 display-flex flex-direction-column margin-bottom-5px">
      <label asp-for="FirstName" class="background-color-antiquewhite">First name</label>
      <input asp-for="FirstName" class="font-size-20px" autocomplete="off" readonly="@(Model.UserID != Model.CurrentRequestingUserId)" />
    </div>
    <div class="width-5px"></div>
    <div class="flex-1 display-flex flex-direction-column margin-bottom-5px">
      <label asp-for="LastName" class="background-color-antiquewhite">Last name</label>
      <input asp-for="LastName" class="font-size-20px" autocomplete="off" readonly="@(Model.UserID != Model.CurrentRequestingUserId)" />
    </div>
  </div>

  <div class="margin-bottom-5px background-color-antiquewhite">
    <label>Available organizations:</label>
    <div class="display-flex flex-direction-column margin-top-5px">
      <div v-for="organization in organizations" :key="organization.organizationID" class="display-flex flex-1 margin-bottom-5px">
        <input type="checkbox"
               :id="'org-' + organization.organizationID"
               :value="organization.organizationID"
               :checked="selectedOrganizationIds.includes(organization.organizationID.toString())"
               @@change="updateSelectedOrganizations" />
        <label :for="'org-' + organization.organizationID" class="margin-left-5px">{{ organization.name }}</label>
      </div>
    </div>
  </div>

  <div class="margin-bottom-5px background-color-antiquewhite">
    <label>Available roles:</label>
    <div class="display-flex flex-direction-column margin-top-5px">
      <div v-for="role in roles" :key="role" class="display-flex flex-1 margin-bottom-5px">
        <input type="checkbox"
               :id="'role-' + role"
               :value="role"
               :checked="selectedRoles.includes(role)"
               @@change="updateSelectedRoles" />
        <label :for="'role-' + role" class="margin-left-5px">{{ role }}</label>
      </div>
    </div>
  </div>

  <div class="display-flex">
    <div class="flex-1">
      <button class="full-width-regular-button width-100" type="button" onclick="event.preventDefault(); window.location.href='@Url.Action("Users", "User")';">Cancel</button>
    </div>
    <div class="width-5px"></div>
    <div class="flex-1">
      <button type="submit" class="full-width-regular-button width-100">Update user</button>
    </div>
  </div>
</form>

@if (Model != null && Model.ValidationResult != null)
{
  foreach (var error in Model.ValidationResult.Errors)
  {
    <div>
      <small class="color-red">@error.ErrorMessage</small>
    </div>
  }
}

<script src="~/js/vue-3-5-13.js" asp-append-version="true"></script>
<script>
  const { createApp } = Vue;

  const app = createApp({
    data() {
      return {
        organizations: @Html.Raw(Json.Serialize(Model.AvailableOrganizations)),
        roles: @Html.Raw(Json.Serialize(Model.AvailableRoles)),
        selectedOrganizationIds: @Html.Raw(Json.Serialize(Model.SelectedOrganizationIdsCsv?.Split(',') ?? [])),
        selectedRoles: @Html.Raw(Json.Serialize(Model.SelectedRoles ?? new List<string>()))
      };
    },
    methods: {
      updateSelectedOrganizations(event) {
        const value = event.target.value;
        if (event.target.checked) {
          this.selectedOrganizationIds.push(value);
        } else {
          this.selectedOrganizationIds = this.selectedOrganizationIds.filter(id => id !== value);
        }
      },
      updateSelectedRoles(event) {
        const value = event.target.value;
        if (event.target.checked) {
          if (!this.selectedRoles.includes(value)) {
            this.selectedRoles.push(value);
          }
        } else {
          this.selectedRoles = this.selectedRoles.filter(role => role !== value);
        }
      }
    }
  });

  app.mount('#app');
</script>