@model Accounting.Models.BlogViewModels.BlogsPaginatedViewModel

@{
  ViewData["Title"] = "Blogs - " + ConfigurationSingleton.Instance.ApplicationName;
}

@{
  string headerText = "Blogs";
}
<partial name="_H1HeaderPartial" model="@headerText" />

<script src="~/js/vue-3-5-13.js" asp-append-version="true"></script>

<template id="blog-action-template">
  <div class="display-flex padding-top-bottom-2px">
    <div class="display-flex flex-1">
      <a href="#" @@click.prevent="toggleAction" class="margin-right-5px">{{ blog.title }}</a>
      <span v-if="isExpanded" class="display-flex margin-left-2px">
        <div class="display-flex flex-direction-column background-color-333333 padding-left-5px padding-right-5px">
          <div class="flex-1"></div>
          <a class="font-size-12px font-Roboto color-white text-decoration-none cursor-default">options:</a>
          <div class="flex-1"></div>
        </div>
        <div class="display-flex
          flex-direction-column
          background-color-333333
          padding-right-5px
          padding-left-5px
          margin-left-2px">
          <div class="flex-1"></div>
          <a href="#" class="font-size-16px font-Roboto color-white text-decoration-none">Option 1</a>
          <div class="flex-1"></div>
        </div>
        <div class="display-flex
          flex-direction-column
          background-color-333333
          padding-right-5px
          padding-left-5px
          margin-left-2px">
          <div class="flex-1"></div>
          <a href="#" class="font-size-16px font-Roboto color-white text-decoration-none">Option 2</a>
          <div class="flex-1"></div>
        </div>
        <div class="display-flex
          flex-direction-column
          background-color-333333
          padding-right-5px
          padding-left-5px
          margin-left-2px">
          <div class="flex-1"></div>
          <a href="#" class="font-size-16px font-Roboto color-white text-decoration-none">Option 3</a>
          <div class="flex-1"></div>
        </div>
      </span>
    </div>
  </div>
</template>

<div class="display-flex margin-bottom-5px background-color-antiquewhite">
	<div>
		<a asp-action="Create" asp-controller="Blog" class="font-Roboto font-size-16px color-blue margin-left-20px">
			Create blog
		</a>
	</div>
	<div class="margin-left-20px flex-1 text-align-right">
		<a asp-action="Index" asp-controller="Home" class="font-Roboto font-size-16px color-blue margin-left-20px">Home</a>
	</div>
</div>

<div id="app">
	<table class="border-collapse width-100 margin-bottom-5px background-color-antiquewhite">
		<thead class="border-bottom-1px-solid-1a3b56 font-Roboto">

		</thead>
		<tbody class="font-Roboto-Mono">

		</tbody>
	</table>

  <pagination-component :prev-page-url="`/b/blogs?page=${page - 1}&pageSize=${pageSize}`"
                        :next-page-url="nextPage ? `/b/blogs?page=${nextPage}&pageSize=${pageSize}` : ''" :is-filtered="isFiltered"
                        :page="page">
</div>

<script>
  const { createApp } = Vue;

  const BlogAction = {
    name: 'BlogAction',
    props: ['blog', 'isExpanded'],
    template: '#blog-action-template',
    methods: {
      toggleAction() {
        this.$emit('expand');
      }
    }
  };



	app.mount('#app');
</script>

@* ```
@model Accounting.Models.InvoiceViewModels.InvoicesPaginatedViewModel

@{
	ViewData["Title"] = "Invoices - " + ConfigurationSingleton.Instance.ApplicationName;
}

@{
	string headerText = "Invoices";
}
<partial name="_H1HeaderPartial" model="@headerText" />

<script src="~/js/vue-3-5-13.js" asp-append-version="true"></script>

<template id="payment-action-template">
	<div class="display-flex padding-top-bottom-2px">
		<div class="display-flex flex-1">
			<a href="#" @@click.prevent="toggleAction" class="margin-right-5px">{{ payment.referenceNumber }}</a>
			<span v-if="payment.voidReason" class="display-flex">
				<div class="display-flex flex-direction-column background-color-red padding-left-5px padding-right-5px">
					<div class="flex-1"></div>
					<a class="font-size-16px font-Roboto color-white text-decoration-none cursor-default">void</a>
					<div class="flex-1"></div>
				</div>
			</span>
			<span v-if="isExpanded" class="display-flex margin-left-2px">
				<div class="display-flex flex-direction-column background-color-333333 padding-left-5px padding-right-5px">
					<div class="flex-1"></div>
					<a class="font-size-12px font-Roboto color-white text-decoration-none cursor-default">options:</a>
					<div class="flex-1"></div>
				</div>
				<div v-if="!payment.voidReason" class="display-flex
            flex-direction-column
            background-color-333333
            padding-right-5px
            padding-left-5px
            margin-left-2px">
					<div class="flex-1"></div>
					<a :href="'/p/void/' + payment.paymentID"
						 class="font-size-16px font-Roboto color-white text-decoration-none">
						void
					</a>
					<div class="flex-1"></div>
				</div>
			</span>
		</div>
	</div>
</template>

<template id="invoice-action-template">
	<div class="display-flex padding-top-bottom-2px">
		<div class="display-flex flex-1">
			<a href="#" @@click.prevent="toggleAction" class="margin-right-5px">{{ invoice.invoiceNumber }}</a>
			<span v-if="isExpanded" class="display-flex">
				<div class="display-flex flex-direction-column background-color-333333 padding-left-5px padding-right-5px">
					<div class="flex-1"></div>
					<a class="font-size-12px font-Roboto color-white text-decoration-none cursor-default">options:</a>
					<div class="flex-1"></div>
				</div>
				<div class="display-flex
            flex-direction-column
            background-color-333333
            padding-right-5px
            padding-left-5px
            margin-left-2px">
					<div class="flex-1"></div>
					<a :href="'/i/update/' + invoice.invoiceID"
						 class="font-size-16px font-Roboto color-white text-decoration-none">
						update
					</a>
					<div class="flex-1"></div>
				</div>
				<div class="display-flex
            flex-direction-column
            background-color-333333
            padding-right-5px
            padding-left-5px
            margin-left-2px">
					<div class="flex-1"></div>
					<a :href="'/r/view-invoice/' + invoice.invoiceID"
						 class="font-size-16px font-Roboto color-white text-decoration-none">
						view
					</a>
					<div class="flex-1"></div>
				</div>
				<div v-if="invoice.status !== 'void'" class="display-flex
            flex-direction-column
            background-color-333333
            padding-right-5px
            padding-left-5px
            margin-left-2px">
					<div class="flex-1"></div>
					<a :href="'/i/void/' + invoice.invoiceID"
						 class="font-size-16px font-Roboto color-white text-decoration-none">
						void
					</a>
					<div class="flex-1"></div>
				</div>
			</span>
		</div>
	</div>
</template>

<div class="display-flex margin-bottom-5px background-color-antiquewhite">
	<div>
		<a asp-action="Create" asp-controller="Invoice" class="font-Roboto font-size-16px color-blue margin-left-20px">
			Create invoice
		</a>
	</div>
	<div class="margin-left-20px flex-1 text-align-right">
		<a asp-action="Customers" asp-controller="Customer"
			 class="font-Roboto font-size-16px color-blue margin-left-20px">Customers</a>
		<a asp-action="Index" asp-controller="Home" class="font-Roboto font-size-16px color-blue margin-left-20px">Home</a>
	</div>
</div>

<div id="app">
	<table class="border-collapse width-100 margin-bottom-5px background-color-antiquewhite">
		<thead class="border-bottom-1px-solid-1a3b56 font-Roboto">
			<tr>
				<th></th>
				<th></th>
				<th class="text-align-left">
					<input type="text" v-model="invoicesFilter" @@input="filterInvoice" placeholder="Invoice"
								 class="font-size-16px width-100" />
				</th>
				<th class="text-align-left">
					<input type="text" v-model="companyFilter" @@input="filterCompany" placeholder="Customer"
								 class="font-size-16px width-100" />
				</th>
				<th class="text-align-right"></th>
				<th class="text-align-right"></th>
				<th class="text-align-right"></th>
			</tr>
			<tr>
				<th class="text-align-left width-1px padding-right-20px fitwidth"></th>
				<th class="text-align-left width-1px padding-right-20px">#</th>
				<th class="text-align-left width-1px padding-right-20px">Invoice</th>
				<th class="text-align-left padding-right-20px">Customer</th>
				<th class="text-align-right width-1px padding-right-20px">Total</th>
				<th class="text-align-right width-1px padding-right-20px">Received</th>
				<th class="text-align-right width-1px">Status</th>
			</tr>
		</thead>
		<tbody class="font-Roboto-Mono">
			<template v-for="invoice in invoices" :key="invoice.invoiceID">
				<tr>
					<td class="padding-right-20px">
						<input type="checkbox" v-model="selectedInvoices" :value="invoice.invoiceID" :disabled="invoice.status === '@Accounting.Business.Invoice.InvoiceStatusConstants.Void'">
					</td>
					<td class="padding-right-20px">{{invoice.rowNumber}}</td>
					<td class="padding-right-20px">
						<invoice-action :invoice="invoice" :is-expanded="invoice.invoiceID === expandedInvoiceId"
														@@expand="handleInvoiceExpand(invoice.invoiceID)"></invoice-action>
					</td>
					<td class="padding-right-20px">
						<business-entity-name-display :business-entity="invoice.businessEntity"></business-entity-name-display>
					</td>
					<td class="text-align-right padding-right-20px">{{invoice.total}}</td>
					<td class="text-align-right padding-right-20px">{{invoice.received}}</td>
					<td class="text-align-right white-space-nowrap">{{invoice.status}}</td>
				</tr>
				<tr v-if="invoice.invoiceID === expandedInvoiceId && invoice.payments && invoice.payments.length > 0">
					<td colspan="2"></td>
					<td colspan="5">
						<table class="width-100">
							<thead>
								<tr class="background-color-lightgray">
									<th class="text-align-left padding-right-20px" colspan="2">Payments</th>
								</tr>
								<tr class="background-color-lightgray">
									<th class="text-align-left padding-right-20px">Reference Number</th>
									<th class="text-align-right width-1px">Amount</th>
								</tr>
							</thead>
							<tbody>
								<tr v-for="payment in invoice.payments" :key="payment.paymentID">
									<td>
										<payment-action :payment="payment" :is-expanded="payment.paymentID === expandedPaymentId"
																		@@expand="handlePaymentExpand(payment.paymentID)"></payment-action>
									</td>
									<td class="text-align-right">{{ payment.amount }}</td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
			</template>
		</tbody>
	</table>

	<pagination-component :prev-page-url="`/i/invoices?page=${page - 1}&pageSize=${pageSize}`"
												:next-page-url="nextPage ? `/i/invoices?page=${nextPage}&pageSize=${pageSize}` : ''" :is-filtered="isFiltered"
												:page="page">
	</pagination-component>

	<form asp-action="ReceivePaymentForInvoiceIds" asp-controller="AccountsReceivable" method="get" ref="form">
		<input type="hidden" name="invoiceIdsCsv" :value="selectedInvoices.join(',')">
		<button type="button" class="full-width-regular-button width-100" @@click="submitForm"
						:disabled="selectedInvoices.length === 0">
			Receive payment
		</button>
	</form>
</div>

<script src="~/js/BusinessEntityNameDisplay.js" asp-append-version="true"></script>

<script>
	const { createApp } = Vue;

	const InvoiceAction = {
		name: 'InvoiceAction',
		props: ['invoice', 'isExpanded'],
		template: '#invoice-action-template',
		methods: {
			toggleAction() {
				this.$emit('expand');
			}
		}
	};

	const PaymentAction = {
		name: 'PaymentAction',
		props: ['payment', 'isExpanded'],
		template: '#payment-action-template',
		methods: {
			toggleAction() {
				this.$emit('expand');
			}
		}
	};

	const PaginationComponent = {
		name: 'PaginationComponent',
		props: {
			prevPageUrl: {
				type: String,
				required: false
			},
			nextPageUrl: {
				type: String,
				required: false
			},
			isFiltered: {
				type: Boolean,
				required: true
			},
			page: {
				type: Number,
				required: true
			}
		},
		template: `
			<div v-if="(prevPageUrl || nextPageUrl) && !isFiltered && (page > 1 || nextPageUrl)"
					 class="margin-bottom-5px display-flex font-Roboto font-size-16px background-color-antiquewhite">
				<div>
					<a :href="prevPageUrl" v-if="page > 1" class="color-blue">prev</a>
				</div>
				<div class="flex-1"></div>
				<div>
					<a :href="nextPageUrl" v-if="nextPageUrl" class="color-blue">next</a>
				</div>
			</div>
		`
	};

	const app = createApp({
		components: {
			'invoice-action': InvoiceAction,
			'business-entity-name-display': BusinessEntityNameDisplay,
			'payment-action': PaymentAction,
			'pagination-component': PaginationComponent
		},
		data() {
			return {
				invoices: [],
				selectedInvoices: [],
				statuses: '@string.Join(",", Accounting.Business.Invoice.InvoiceStatusConstants.All)',
				paymentStatuses: '@string.Join(",", Accounting.Business.Invoice.InvoiceStatusConstants.All)',
				expandedInvoiceId: null,
				expandedPaymentId: null,
				invoicesFilter: '',
				companyFilter: '',
				statusFilter: '',
				page: @Model.Page,
				pageSize: @Model.PageSize,
				nextPage: null,
				rememberPageSize: @(Model.RememberPageSize ? "true" : "false")
			};
		},
		computed: {
			isFiltered() {
				return !!this.invoicesFilter || !!this.companyFilter;
			}
		},
		methods: {
			fetchInvoices() {
				const storedPageSize = parseInt(localStorage.getItem('pageSize'));
				if (storedPageSize) {
					this.pageSize = storedPageSize;
				}

				let apiUrl = this.isFiltered ?
					`/api/i/get-invoices-filtered` :
					`/api/i/get-invoices?page=${this.page}&pageSize=${this.pageSize}`;

				const queryParams = [];

				if (this.statusFilter !== '') {
					queryParams.push(`inStatus=${this.statusFilter}`);
				}

				if (this.isFiltered) {
					if (this.invoicesFilter) {
						queryParams.push(`invoiceNumbers=${this.invoicesFilter}`);
					}
					if (this.companyFilter) {
						queryParams.push(`company=${this.companyFilter}`);
					}
				}

				if (queryParams.length > 0) {
					apiUrl += `?${queryParams.join('&')}`;
				}

				fetch(apiUrl)
					.then(response => response.json())
					.then(data => {
						this.invoices = data.invoices;
						if (data.page > 0) {
							this.page = data.page;
						}
						if (data.nextPage > 0) {
							this.nextPage = data.nextPage;
						} else {
							this.nextPage = null;
						}
					});
			},
			filterInvoice() {
				this.fetchInvoices(!!this.invoicesFilter);
			},
			filterCompany() {
				this.fetchInvoices(!!this.companyFilter);
			},
			submitForm() {
				if (this.selectedInvoices.length === 0) {
					alert('Select at least one invoice.');
					return;
				}
				this.$refs.form.submit();
			},
			handleInvoiceExpand(id) {
				this.expandedInvoiceId = this.expandedInvoiceId === id ? null : id;
			},
			handlePaymentExpand(id) {
				this.expandedPaymentId = this.expandedPaymentId === id ? null : id;
			},
			syncSelectedInvoices() {
				const checkedCheckboxes = document.querySelectorAll('input[type="checkbox"][v-model="selectedInvoices"]:checked');
				this.selectedInvoices = Array.from(checkedCheckboxes).map(checkbox => checkbox.value);
			},
		},
		mounted() {
			if (this.rememberPageSize) {
				localStorage.setItem('pageSize', this.pageSize);
			}
			this.fetchInvoices();
			this.syncSelectedInvoices();
		},
	});

	app.mount('#app');
</script>
``` *@