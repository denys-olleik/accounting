@model Accounting.Models.TenantViewModels.OrganizationsViewModel

@{
  ViewData["Title"] = "Organizations - " + ConfigurationSingleton.Instance.ApplicationName;
}

@{
  string headerText = "Organizations";
}
<partial name="_H1HeaderPartial" model="@headerText" />

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

<template id="organization-action-template">
  <div class="display-flex padding-top-bottom-2px">
    <div class="display-flex flex-1">
      <a href="#" @@click.prevent="toggleAction" class="margin-right-5px">{{ organization.name }}</a>
      <span v-if="isExpanded" class="display-flex">
        <div class="display-flex flex-direction-column background-color-333333 padding-left-5px padding-right-5px margin-left-2px">
          <div class="flex-1"></div>
          <a :href="'/organization/delete/' + organization.name" class="font-size-16px font-Roboto color-white text-decoration-none">
            delete
          </a>
          <div class="flex-1"></div>
        </div>
      </span>
    </div>
  </div>
</template>

<div id="app">
  <table class="border-collapse width-100 margin-bottom-5px background-color-antiquewhite">
    <thead class="border-bottom-1px-solid-1a3b56 font-Roboto">
      <tr>
        <th class="text-align-left width-1px padding-right-20px">#</th>
        <th class="text-align-left padding-right-20px">Organization Name</th>
        <th class="text-align-left width-1px">Actions</th>
      </tr>
    </thead>
    <tbody class="font-Roboto-Mono">
      <template v-for="(organization, index) in organizations" :key="organization.name">
        <tr>
          <td class="padding-right-20px">{{ index + 1 }}</td>
          <td class="padding-right-20px">{{ organization.name }}</td>
          <td class="padding-right-20px">
            <organization-action :organization="organization" :is-expanded="expandedOrganizationName === organization.name" @@expand="handleOrganizationExpand(organization.name)"></organization-action>
          </td>
        </tr>
      </template>
    </tbody>
  </table>
</div>

<script>
  const { createApp } = Vue;

  const OrganizationAction = {
    name: 'OrganizationAction',
    props: ['organization', 'isExpanded'],
    template: '#organization-action-template',
    methods: {
      toggleAction() {
        this.$emit('expand');
      }
    }
  };

  const app = createApp({
    components: {
      'organization-action': OrganizationAction,
    },
    data() {
      return {
        organizations: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Organizations)),
        expandedOrganizationName: null
      };
    },
    methods: {
      handleOrganizationExpand(name) {
        this.expandedOrganizationName = this.expandedOrganizationName === name ? null : name;
      }
    }
  });

  app.mount("#app");
</script>
