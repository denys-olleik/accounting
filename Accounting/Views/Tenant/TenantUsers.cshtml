@{
  ViewData["Title"] = "Tenant Users - " + ConfigurationSingleton.Instance.ApplicationName;
}

@{
  string headerText = "Tenant Users";
}
<partial name="_H1HeaderPartial" model="@headerText" />

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

<div class="display-flex margin-bottom-5px background-color-antiquewhite">
  <div>
    <a asp-action="Tenants" asp-controller="Tenant"
       class="font-Roboto font-size-16px color-blue">Tenants</a>
  </div>
  <div>
    <a asp-action="AddUserOrganization"
       asp-controller="Tenant"
       asp-route-tenantId="@Model.TenantId"
       class="font-Roboto font-size-16px color-blue margin-left-20px">
      Add User-Organization
    </a>
  </div>
  <div>
    <a asp-action="AddUser"
       asp-controller="Tenant"
       asp-route-tenantId="@Model.TenantId"
       class="font-Roboto font-size-16px color-blue margin-left-20px">
      Add User
    </a>
  </div>
  <div>
    <a asp-action="AddOrganization"
       asp-controller="Tenant"
       asp-route-tenantId="@Model.TenantId"
       class="font-Roboto font-size-16px color-blue margin-left-20px">
      Add Organization
    </a>
  </div>
</div>

<div id="app">
  <table class="border-collapse width-100 margin-bottom-5px background-color-antiquewhite">
  <thead class="border-bottom-1px-solid-1a3b56 font-Roboto">
    <tr>
      <th class="text-align-left width-1px padding-right-20px">Email</th>
      <th class="text-align-right">Organization</th>
    </tr>
  </thead>
  <tbody class="font-Roboto-Mono">
    <template v-for="(userOrg, index) in userOrganizations" :key="userOrg.userOrganizationID">
      <tr>
        <td class="padding-right-20px">{{ userOrg.user?.email || 'N/A' }}</td>
        <td class="text-align-right">{{ userOrg.organization?.name || 'N/A' }}</td>
      </tr>
    </template>
  </tbody>
</table>
</div>

<script>
  const { createApp } = Vue;

  const app = createApp({
    data() {
      return {
        tenantId: @Model.TenantId,
        userOrganizations: []
      };
    },
    methods: {
      fetchUserOrganizations() {
        fetch(`/api/tenant/${this.tenantId}/user-organizations`)
          .then(response => response.json())
          .then(data => {
            this.userOrganizations = data;
          });
      }
    },
    mounted(){
      this.fetchUserOrganizations();
    }
  });

  app.mount('#app');
</script>