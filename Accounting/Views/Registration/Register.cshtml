@model Accounting.Models.RegistrationViewModels.CompositeRegistrationViewModel

@{
  ViewData["Title"] = "Demo registration - " + ConfigurationSingleton.Instance.ApplicationName;
}

@{
  string headerText = "Demo registration";
}

<partial name="_H1HeaderPartial" model="@headerText" />

<div id="app" v-cloak>

  <!-- Email input always visible -->
  <div class="display-flex flex-direction-column margin-bottom-5px background-color-antiquewhite">
    <div class="display-flex flex-direction-column background-color-antiquewhite margin-bottom-5px">
      <label class="background-color-antiquewhite">Email</label>
      <input name="Email" v-model="email" class="font-size-20px font-Roboto-Mono" autofocus autocomplete="off" tabindex="1" placeholder="Email" />
    </div>
    <span>
      <div class="display-flex margin-bottom-10px">
        <span class="margin-right-15px">
          <input type="radio" id="shared-radio" value="shared" v-model="selectedType" class="margin-bottom-5px" />
          <label for="shared-radio">shared</label>
        </span>
       @*  <span class="margin-right-15px">
          <input type="radio" id="dedicated-radio" value="dedicated" v-model="selectedType" class="margin-bottom-5px" />
          <label for="dedicated-radio">dedicated</label>
        </span>
        <span>
          <input type="radio" id="independent-radio" value="independent" v-model="selectedType" class="margin-bottom-5px" />
          <label for="independent-radio">independent</label>
        </span> *@
      </div>
    </span>
  </div>

  <!-- Shared Registration Form -->
  <form v-if="selectedType === 'shared'" asp-action="RegisterShared" asp-controller="Registration" method="post" class="display-flex flex-direction-column margin-bottom-5px">
    <input type="hidden" name="Email" :value="getEmail()" />
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">First name</label>
      <input name="FirstName" v-model="firstName" tabindex="2" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="First name" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Last name</label>
      <input name="LastName" v-model="lastName" tabindex="3" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="Last name" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Password</label>
      <input name="Password" type="password" tabindex="4" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="Password" />
    </div>
    <button type="submit" class="full-width-regular-button">Register</button>
  </form>

  <!-- Dedicated Registration Form -->
@*   <form v-if="selectedType === 'dedicated'" asp-action="RegisterDedicated" asp-controller="Registration" method="post" class="display-flex flex-direction-column margin-bottom-5px">
    <input type="hidden" name="Email" :value="getEmail()" />
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">First name</label>
      <input name="FirstName" v-model="firstName" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="First name" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Last name</label>
      <input name="LastName" v-model="lastName" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="Last name" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Password</label>
      <input name="Password" type="password" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="Password" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Fully qualified domain name</label>
      <input name="FullyQualifiedDomainName" v-model="fullyQualifiedDomainName" class="margin-bottom-5px font-size-20px" placeholder="e.g. example.com, accounting.example.com" autocomplete="off" />
    </div>
    <button type="submit" class="full-width-regular-button">Register</button>
  </form> *@

  <!-- Independent Registration Form -->
@*   <form v-if="selectedType === 'independent'" asp-action="RegisterIndependent" asp-controller="Registration" method="post" class="display-flex flex-direction-column margin-bottom-5px">
    <input type="hidden" name="Email" :value="getEmail()" />
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">First name</label>
      <input name="FirstName" v-model="firstName" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="First name" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Last name</label>
      <input name="LastName" v-model="lastName" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="Last name" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Password</label>
      <input name="Password" type="password" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="Password" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Fully qualified domain name</label>
      <input name="FullyQualifiedDomainName" v-model="fullyQualifiedDomainName" class="margin-bottom-5px font-size-20px" placeholder="e.g. example.com, accounting.example.com" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">No reply email address</label>
      <input name="NoReplyEmailAddress" v-model="noReplyEmailAddress" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="No reply email address" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Email key</label>
      <input name="EmailKey" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="Email key" autocomplete="off" />
    </div>
    <div class="display-flex flex-direction-column">
      <label class="background-color-antiquewhite">Cloud key</label>
      <input name="CloudKey" class="margin-bottom-5px font-size-20px font-Roboto-Mono" placeholder="Cloud key" autocomplete="off" />
    </div>
    <button type="submit" class="full-width-regular-button">Register</button>
  </form> *@

  @if (Model != null && Model.ValidationResult != null && Model.ValidationResult.Errors.Any())
  {
    <div class="display-flex flex-direction-column margin-bottom-5px">
    @foreach (var error in Model.ValidationResult.Errors)
    {
      <div>
        <small class="color-red">@error.ErrorMessage</small>
      </div>
    }
    </div>
  }
</div>

<script src="~/js/vue-3-5-13.js" asp-append-version="true"></script>
<script>
  const { createApp } = Vue;
  createApp({
    data() {
      return {
        selectedType: '@Model.SelectedRegistrationType.ToString().ToLower()',
        email: '@(Model.Shared?.Email ?? Model.Dedicated?.Email ?? Model.Independent?.Email ?? "")',
        firstName: '@(Model.Shared?.FirstName ?? Model.Dedicated?.FirstName ?? Model.Independent?.FirstName ?? "")',
        lastName: '@(Model.Shared?.LastName ?? Model.Dedicated?.LastName ?? Model.Independent?.LastName ?? "")',
        fullyQualifiedDomainName: '@(Model.Dedicated?.FullyQualifiedDomainName ?? Model.Independent?.FullyQualifiedDomainName ?? "")',
      }
    },
    methods: {
      getEmail() {
        // Get email from the always-visible input
        return this.email;
      }
    },
    watch: {
      email(val) {
        // Keep hidden email fields in sync
      }
    }
  }).mount('#app');
</script>