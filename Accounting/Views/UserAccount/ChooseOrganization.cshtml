@model Accounting.Models.UserAccountViewModels.ChooseOrganizationViewModel

@{
  ViewData["Title"] = "Choose Organization - " + ConfigurationSingleton.Instance.ApplicationName;
}

@{
  string headerText = "Choose organization";
}
<partial name="_H1HeaderPartial" model="@headerText" />

<script src="~/js/vue-3-5-13.js" asp-append-version="true"></script>

<div class="display-flex margin-bottom-5px background-color-antiquewhite">
  <div class="margin-left-20px">
    <a asp-action="Create" asp-controller="Organization" class="font-Roboto font-size-16px color-blue">
      Create organization
    </a>
  </div>
  <div class="margin-left-20px flex-1 text-align-right">
    <a asp-action="Index" asp-controller="Home" class="font-Roboto font-size-16px color-blue margin-left-20px">Home</a>
  </div>
</div>

<form id="app" asp-action="ChooseOrganization" asp-controller="UserAccount" method="post" class="display-flex flex-direction-column">
  <div class="display-flex flex-direction-column">
    <label asp-for="SelectedOrganizationId" class="background-color-antiquewhite">Organization</label>
    <input type="hidden" name="SelectedOrganizationId" :value="selectedOrganizationId" />
    <input type="hidden" name="SelectedTenantId" :value="selectedTenantId" />

    <select v-model="selectedOrganization" class="margin-bottom-5px font-size-20px font-Roboto-Mono">
      <option value="" class="font-Roboto">Select an organization</option>
      <option v-for="organization in organizations" :value="{ organizationId: organization.organizationId, tenantId: organization.tenantId }">
        {{ organization.name }}
      </option>
    </select>
  </div>

  <button type="submit" class="full-width-regular-button">Choose organization</button>
</form>

@if (Model != null && Model.ValidationResult != null)
{
  foreach (var error in Model.ValidationResult.Errors)
  {
    <div>
      <small class="color-red">@error.ErrorMessage</small>
    </div>
  }
}

<script>
  const { createApp } = Vue;

  const app = createApp({
    data() {
      return {
        organizations: @Html.Raw(Json.Serialize(Model.Organizations)),
        selectedOrganization: '',
        selectedOrganizationId: null,
        selectedTenantId: null
      };
    },
    watch: {
      selectedOrganization(newVal) {
        if (newVal) {
          this.selectedOrganizationId = newVal.organizationId;
          this.selectedTenantId = newVal.tenantId;
        } else {
          this.selectedOrganizationId = null;
          this.selectedTenantId = null;
        }
      }
    }
  });

  app.mount('#app');
</script>